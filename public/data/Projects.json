[
  {
    "id": 1,
    "title": "React UI Component Library",
    "type": "Library",
    "stack": ["React", "TypeScript", "Storybook", "Tailwindcss"],
    "description": "Reusable React UI component library with a custom design system and full Storybook documentation.",
    "longDescription": "This is a reusable UI component library built with React and TypeScript. It includes a full design system and is documented using Storybook, making it easy to scale and maintain across multiple projects. Components are styled with TailwindCSS for responsiveness and consistency. It helps teams build faster by offering pre-built, accessible, and customizable UI blocks.",
    "insights": {
      "purpose": "The goal was to create a scalable, maintainable, and well-documented UI component system for consistent design and development across multiple React projects.",
      "designApproach": "The library follows an atomic design methodology, with a custom design system implemented using TailwindCSS. Each component was built with reusability and accessibility in mind, and documented using Storybook for better developer experience.",
      "challenges": "One of the main challenges was achieving full accessibility (a11y) across all components while keeping them customizable. Ensuring design consistency across different projects and use cases also required rigorous testing and iteration."
    },
    "code": "https://github.com/your-username/react-ui-library",
    "deploy": "https://react-ui-library-demo.vercel.app",
    "image": "https://storybook.js.org/docs-assets/8.6/get-started/example-onboarding-wizard.png",
    "gallery": [
      "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/uoavxaduhfas9v0mhh0d"
    ],
    "buttonText": "Doc"
  },
  {
    "id": 2,
    "title": "React Hooks Utility Library",
    "type": "Library",
    "stack": ["React", "TypeScript", "Jest"],
    "description": "A set of custom React hooks to simplify state handling, local storage, data fetching, and more.",
    "longDescription": "This utility library provides a collection of reusable React hooks developed in TypeScript. It includes useful hooks for working with localStorage, media queries, breakpoints, async data fetching, and more. The library is designed for performance and testability, using Jest for unit testing. It helps developers reduce boilerplate code and build React apps more efficiently.",
    "insights": {
      "purpose": "The goal of this library was to encapsulate common logic used across many React apps into reusable and testable custom hooks, improving productivity and reducing repetitive code.",
      "designApproach": "Each hook was designed with simplicity and reusability in mind. TypeScript ensures type safety, and Jest provides a solid testing framework. Hooks are modular, follow single responsibility, and are documented with clear usage examples.",
      "challenges": "A key challenge was balancing abstraction with flexibility — making hooks that are generic enough to reuse, yet specific enough to be truly helpful. Testing asynchronous behavior and browser APIs like localStorage also required thoughtful mocking and coverage strategies."
    },
    "code": "https://github.com/your-username/react-hooks-library",
    "deploy": "https://www.npmjs.com/package/react-hooks-library",
    "image": "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/k414voypcrwjgxyog3p7",
    "gallery": [
      "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/uoavxaduhfas9v0mhh0d"
    ],
    "buttonText": "Doc"
  },
  {
    "id": 3,
    "title": "Helpers Kit Utility Library",
    "type": "Library",
    "stack": ["TypeScript", "Vitest"],
    "description": "Framework-agnostic TypeScript helper functions like deepClone, debounce, slugify, and more.",
    "longDescription": "A utility library built entirely in TypeScript, designed to be framework-agnostic. It includes helper functions commonly used in both frontend and backend development, such as deep cloning, debouncing, string manipulation (slugify), and more. Ideal for use in any TypeScript project that needs reliable, well-typed utilities.",
    "insights": {
      "purpose": "The goal was to create a lightweight, framework-agnostic set of TypeScript utilities to speed up development and reduce duplication of basic logic across multiple projects.",
      "designApproach": "The library was developed with strong typing and functional purity in mind. Each helper was written to be independent, reusable, and easy to test. Documentation and examples were added to improve clarity and usability across environments.",
      "challenges": "One challenge was ensuring compatibility across different JavaScript runtimes (Node.js, browser, etc.) without relying on external dependencies. Writing fully type-safe utilities that work generically yet intuitively also required a lot of trial and error with TypeScript’s advanced types."
    },
    "code": "https://github.com/your-username/ts-helpers-kit",
    "deploy": "https://www.npmjs.com/package/ts-helpers-kit",
    "image": "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/zj8mhsdhisazspztrkk3",
    "gallery": [
      "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/uoavxaduhfas9v0mhh0d"
    ],
    "buttonText": "Doc"
  },
  {
    "id": 4,
    "title": "The Coffee Roastery",
    "type": "Project",
    "stack": [
      "React",
      "Firebase",
      "Tailwindcss",
      "ReactRouter",
      "Framer Motion"
    ],
    "description": "A coffee shop website focused on clean UI and visual storytelling. Built with React and Firebase.",
    "longDescription": "I designed and developed a website for a coffee brand with a minimal and elegant approach. The site aims to convey warmth and quality through high-resolution imagery and a clean user interface. Built using React and Tailwindcss for responsive and fast development, it integrates Firebase for content management and user authentication. Smooth animations powered by Framer Motion enhance user experience. The natural color palette emphasizes the earthy tones of freshly roasted coffee, evoking a handcrafted, premium feel.",
    "insights": {
      "purpose": "The project was created to give a digital identity to a boutique coffee brand, combining modern web technologies with a narrative-driven design to connect with customers on a sensory level.",
      "designApproach": "The design focused on minimalism, earthy colors, and immersive visuals. I used Tailwindcss for utility-first styling and Framer Motion to enhance interactivity without overwhelming the user. Firebase handled authentication and data storage, allowing for dynamic and secure content management.",
      "challenges": "Balancing performance with high-quality imagery was a key challenge. I had to optimize assets carefully to maintain fast load times while preserving the premium feel. Integrating smooth animations with route transitions also required fine-tuning with Framer Motion and React Router."
    },
    "code": "https://github.com/emanuelpps/the-coffee-roastery",
    "deploy": "https://the-coffee-roastery.vercel.app/",
    "image": "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/mpuxljlcp2k8iwdwotcx",
    "gallery": [
      "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/uoavxaduhfas9v0mhh0d"
    ],
    "buttonText": "Deploy"
  },
  {
    "id": 5,
    "title": "The CodeMaker Lab",
    "type": "Project",
    "stack": [
      "Next.js",
      "TypeScript",
      "Tailwindcss",
      "Zustand",
      "Framer Motion"
    ],
    "description": "Redesign and development of a software agency website using modern technologies and animations.",
    "longDescription": "I was in charge of the complete redesign and development of The CodeMaker Lab's website, a software development agency. The original site had an outdated and unattractive look. I proposed a full visual overhaul, focusing on delivering a modern and professional experience. The site was built with Next.js and TypeScript, using Tailwindcss for styling, Zustand for global state management, and Framer Motion for smooth, engaging animations. The new design features bold typography, a vibrant and modern color palette, and intuitive navigation. The result is a visually impactful, user-friendly website aligned with the brand’s identity and goals.",
    "code": "",
    "insights": {
      "purpose": "This project was aimed at redefining the digital presence of The CodeMaker Lab by providing a modern, professional, and conversion-oriented website. The goal was to establish credibility and clearly communicate the services and expertise of the agency.",
      "designApproach": "The new design was centered around strong visual hierarchy, impactful headlines, and vibrant color contrast to highlight key sections. The user interface was structured with responsiveness in mind, and animations were integrated to enrich user interaction without hindering performance.",
      "challenges": "A major challenge was balancing expressive animations with performance and usability. It also required careful management of shared state across components, for which Zustand proved lightweight and effective. Ensuring accessibility while pushing for a bold visual style also presented design tradeoffs that had to be resolved thoughtfully."
    },
    "deploy": "https://codemakerlab.vercel.app/",
    "image": "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/jm2b7e48wpfisjdloapk",
    "gallery": [
      "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/uoavxaduhfas9v0mhh0d"
    ],
    "buttonText": "Deploy"
  },
  {
    "id": 6,
    "title": "Actor Portfolio",
    "type": "Project",
    "stack": ["Next.js", "TypeScript", "Tailwindcss", "Framer Motion"],
    "description": "A personal website for an actor showcasing biography, performances, and photos.",
    "longDescription": "This portfolio website was developed for a theater actor as part of a project at The CodeMaker Lab. The site includes the actor’s biography, a list of past performances, and a gallery of stage photos. Built with Next.js and TypeScript for performance and scalability, the layout was designed with Tailwindcss for a modern and responsive experience. The visual structure is minimal yet bold, using large, elegant typography and a monochrome palette to convey a professional and artistic presence. The website’s goal is to clearly highlight the actor’s career while maintaining a stylish and personal presentation.",
    "code": "",
    "deploy": "https://mng-actor.vercel.app/",
    "image": "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/hkhtxbhchexjiccmvetn",
    "gallery": [
      "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/uoavxaduhfas9v0mhh0d"
    ],
    "buttonText": "Deploy"
  },
  {
    "id": 7,
    "title": "Personal Portfolio 2024",
    "type": "Project",
    "stack": ["Next.js", "TypeScript", "Tailwindcss", "Framer Motion"],
    "description": "Mi portfolio anterior, desarrollado en 2023. Rediseñado anualmente para reflejar mi crecimiento profesional.",
    "longDescription": "Este fue mi portfolio personal durante 2024. Cada año desarrollo un nuevo portfolio con una estética y estructura renovadas, como ejercicio de mejora continua. Esta versión fue construida con Next.js, TailwindCSS y TypeScript, con un diseño centrado en la simplicidad, la legibilidad y una presentación clara de mis proyectos y experiencia.",
    "code": "https://github.com/emanuelpps/emanuelpps-portfolio",
    "deploy": "https://emanuelp-portfolio.vercel.app/",
    "image": "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/ryhv6mnd6mwxnd6obmo6",
    "gallery": [],
    "buttonText": "Deploy"
  },
  {
    "id": 8,
    "title": "EP Weather App",
    "type": "Project",
    "stack": ["React Js", "JavaScript", "Fetch API", "Bootstrap", "CSS"],
    "description": "Aplicación del clima simple desarrollada en JavaScript puro con datos en tiempo real.",
    "longDescription": "Una aplicación web para consultar el clima actual de cualquier ciudad usando la API de OpenWeatherMap. Desarrollada como práctica de consumo de APIs con JavaScript puro, la interfaz es sencilla, responsive y muestra temperatura, condiciones climáticas y otros detalles útiles.",
    "code": "https://github.com/emanuelpps/EP-WeatherAPP",
    "deploy": "https://emanuelpps.github.io/EP-WeatherAPP/",
    "image": "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/yuxe7vmfbx78qmownrjx",
    "gallery": [],
    "buttonText": "Deploy"
  },
  {
    "id": 9,
    "title": "Don Remolo Pizza",
    "type": "Project",
    "stack": [
      "React Js",
      "Firebase",
      "Framer Motion",
      "Bootstrap",
      "JavaScript",
      "CSS"
    ],
    "description": "Landing page ficticia para una pizzería, enfocada en diseño visual y experiencia de usuario.",
    "longDescription": "Don Remolo Pizza es una landing page diseñada para una marca ficticia de pizzería artesanal. El objetivo fue practicar diseño responsivo, organización de componentes, consumo de base de datos y experiencia visual animada para captar la atención del usuario.",
    "code": "https://github.com/emanuelpps/donremolo",
    "deploy": "https://donremolo.vercel.app/",
    "image": "https://res.cloudinary.com/dkgoszhfr/image/upload/f_auto,q_auto/oyv76xau2xt9erpuh2lv",
    "gallery": [],
    "buttonText": "Deploy"
  }
]
